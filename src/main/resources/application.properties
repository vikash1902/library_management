spring.application.name=pyramid

# db configuration
spring.datasource.url=jdbc:postgresql://10.199.62.78:5432/pyramid_db
spring.datasource.username=pyramid
spring.datasource.password=pyramid
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.format_sql=true
server.error.whitelabel.enabled=false
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.show_sql=false



#server.port=8080

# Google OAuth Client Registration



spring.security.oauth2.client.registration.google.client-id=your_client_id
spring.security.oauth2.client.registration.google.client-secret=your_client_secrate
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

# Google OAuth Provider Details
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v1/certs

# Resource Server JWT Validation
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://accounts.google.com


logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web: DEBUG
logging.level.org.springframework: DEBUG
